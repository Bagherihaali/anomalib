:py:mod:`anomalib.models.patchcore.anomaly_map`
===============================================

.. py:module:: anomalib.models.patchcore.anomaly_map

.. autoapi-nested-parse::

   Anomaly Map Generator for the PatchCore model implementation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.patchcore.anomaly_map.AnomalyMapGenerator




.. py:class:: AnomalyMapGenerator(input_size: Union[omegaconf.ListConfig, Tuple], sigma: int = 4)

   Bases: :py:obj:`torch.nn.Module`

   Generate Anomaly Heatmap.

   .. py:method:: compute_anomaly_map(self, patch_scores: torch.Tensor) -> torch.Tensor

      Pixel Level Anomaly Heatmap.

      :param patch_scores: Patch-level anomaly scores
      :type patch_scores: Tensor

      :returns: Map of the pixel-level anomaly scores
      :rtype: torch.Tensor


   .. py:method:: forward(self, patch_scores: torch.Tensor) -> torch.Tensor

      Returns anomaly_map and anomaly_score.

      :param patch_scores: Patch-level anomaly scores
      :type patch_scores: Tensor

      Example
      >>> anomaly_map_generator = AnomalyMapGenerator(input_size=input_size)
      >>> map = anomaly_map_generator(patch_scores=patch_scores)

      :returns: anomaly_map
      :rtype: Tensor



