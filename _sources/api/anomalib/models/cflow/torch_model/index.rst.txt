:py:mod:`anomalib.models.cflow.torch_model`
===========================================

.. py:module:: anomalib.models.cflow.torch_model

.. autoapi-nested-parse::

   PyTorch model for CFlow model implementation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.cflow.torch_model.CflowModel




.. py:class:: CflowModel(input_size: Tuple[int, int], backbone: str, layers: List[str], pre_trained: bool = True, fiber_batch_size: int = 64, decoder: str = 'freia-cflow', condition_vector: int = 128, coupling_blocks: int = 8, clamp_alpha: float = 1.9, permute_soft: bool = False)

   Bases: :py:obj:`torch.nn.Module`

   CFLOW: Conditional Normalizing Flows.

   .. py:method:: forward(self, images)

      Forward-pass images into the network to extract encoder features and compute probability.

      :param images: Batch of images.

      :returns: Predicted anomaly maps.



