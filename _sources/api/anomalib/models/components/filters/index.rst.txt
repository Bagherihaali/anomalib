:py:mod:`anomalib.models.components.filters`
============================================

.. py:module:: anomalib.models.components.filters

.. autoapi-nested-parse::

   Implements filters used by models.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   blur/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.components.filters.GaussianBlur2d




.. py:class:: GaussianBlur2d(kernel_size: Union[Tuple[int, int], int], sigma: Union[Tuple[float, float], float], channels: int, normalize: bool = True, border_type: str = 'reflect', padding: str = 'same')

   Bases: :py:obj:`torch.nn.Module`

   Compute GaussianBlur in 2d.

   Makes use of kornia functions, but most notably the kernel is not computed
   during the forward pass, and does not depend on the input size. As a caveat,
   the number of channels that are expected have to be provided during initialization.

   .. py:method:: forward(self, input_tensor: torch.Tensor) -> torch.Tensor

      Blur the input with the computed Gaussian.

      :param input_tensor: Input tensor to be blurred.
      :type input_tensor: Tensor

      :returns: Blurred output tensor.
      :rtype: Tensor



