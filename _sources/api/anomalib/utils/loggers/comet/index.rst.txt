:py:mod:`anomalib.utils.loggers.comet`
======================================

.. py:module:: anomalib.utils.loggers.comet

.. autoapi-nested-parse::

   comet logger with add image interface.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.utils.loggers.comet.AnomalibCometLogger




.. py:class:: AnomalibCometLogger(api_key: Optional[str] = None, save_dir: Optional[str] = None, project_name: Optional[str] = None, rest_api_key: Optional[str] = None, experiment_name: Optional[str] = None, experiment_key: Optional[str] = None, offline: bool = False, prefix: str = '', **kwargs)

   Bases: :py:obj:`anomalib.utils.loggers.base.ImageLoggerBase`, :py:obj:`pytorch_lightning.loggers.comet.CometLogger`

   Logger for comet.

   Adds interface for `add_image` in the logger rather than calling the experiment object.
   .. note:: Same as the CometLogger provided by PyTorch Lightning and the doc string is reproduced below.

   Track your parameters, metrics, source code and more using
   `Comet <https://www.comet.com/site/products/ml-experiment-tracking/?utm_source=anomalib&utm_medium=referral>`_.

   Install it with pip:

   .. code-block:: bash

       pip install comet-ml

   Comet requires either an API Key (online mode) or a local directory path (offline mode).

   :param api_key: Required in online mode. API key, found on Comet.ml. If not given, this
                   will be loaded from the environment variable COMET_API_KEY or ~/.comet.config
                   if either exists.
   :param save_dir: Required in offline mode. The path for the directory to save local
                    comet logs. If given, this also sets the directory for saving checkpoints.
   :param project_name: Optional. Send your experiment to a specific project.
                        Otherwise will be sent to Uncategorized Experiments.
                        If the project name does not already exist, Comet.ml will create a new project.
   :param rest_api_key: Optional. Rest API key found in Comet.ml settings.
                        This is used to determine version number
   :param experiment_name: Optional. String representing the name for this particular experiment on Comet.ml.
   :param experiment_key: Optional. If set, restores from existing experiment.
   :param offline: If api_key and save_dir are both given, this determines whether
                   the experiment will be in online or offline mode. This is useful if you use
                   save_dir to control the checkpoints directory and have a ~/.comet.config
                   file but still want to run offline experiments.
   :param prefix: A string to put at the beginning of metric keys.
   :param kwargs: Additional arguments like `workspace`, `log_code`, etc. used by
                  :class:`CometExperiment` can be passed as keyword arguments in this logger.

   :raises ModuleNotFoundError: If required Comet package is not installed on the device.
   :raises MisconfigurationException: If neither ``api_key`` nor ``save_dir`` are passed as arguments.

   .. rubric:: Example

   >>> from anomalib.utils.loggers import AnomalibCometLogger
   >>> from pytorch_lightning import Trainer
   >>> comet_logger = AnomalibCometLogger()
   >>> trainer = Trainer(logger=comet_logger)

   .. seealso:: - `Comet Documentation <https://www.comet.com/docs/v2/integrations/ml-frameworks/pytorch-lightning/>`__

   .. py:method:: add_image(self, image: Union[numpy.ndarray, matplotlib.figure.Figure], name: Optional[str] = None, **kwargs: Any)

      Interface to add image to comet logger.

      :param image: Image to log
      :type image: Union[np.ndarray, Figure]
      :param name: The tag of the image
      :type name: Optional[str]
      :param kwargs: Accepts only `global_step` (int). The step at which to log the image.



