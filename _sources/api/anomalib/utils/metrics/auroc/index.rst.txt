:py:mod:`anomalib.utils.metrics.auroc`
======================================

.. py:module:: anomalib.utils.metrics.auroc

.. autoapi-nested-parse::

   Implementation of AUROC metric based on TorchMetrics.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.utils.metrics.auroc.AUROC




.. py:class:: AUROC(num_classes: Optional[int] = None, pos_label: Optional[int] = None, compute_on_step: Optional[bool] = None, **kwargs: Dict[str, Any])

   Bases: :py:obj:`torchmetrics.ROC`

   Area under the ROC curve.

   .. py:method:: compute(self) -> torch.Tensor

      First compute ROC curve, then compute area under the curve.

      :returns: Value of the AUROC metric



